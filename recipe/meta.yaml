{% set name = "libecpint" %}
{% set version = "1.0.7" %}
#{% set sha256 = "e9c60fddb2614f113ab59ec620799d961db73979845e6e637c4a6fb72aee51cc" %}
{% set sha256 = "090f4a9f4757030337229783bdebc4ccb9c7aac570b1ce9cd94f1a3c18f7625d" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/loriab/libecpint/archive/psiecp2023.tar.gz
  #url: https://github.com/robashaw/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  #patches:
  #  - 0001-cmake-migrate-C-standard-to-targets-59.patch
  sha256: {{ sha256 }}

build:
  number: 4
#  skip: True  # [osx]
  ignore_run_exports:
    - pugixml                                                                          # ignore b/c static library

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    #- python 3.10                                                                      # only for generating a source file, so suppress all but one Py version. update as necessary.
    - python                                                                           # only for generating a source file, so suppress all but one Py version. update as necessary.
    - cross-python_{{ target_platform }}                                    # [build_platform != target_platform]
  host:
    - gtest                                                                            # for ctest testing
    - pugixml

test:
  requires:
    - m2w64-binutils                                                        # [win]   # provides objdump.exe
  commands:
    # Verify library
    - test -f $PREFIX/lib/libecpint$SHLIB_EXT                               # [unix]
    - test ! -f $PREFIX/lib/libecpint.a                                     # [unix]
    - if not exist %PREFIX%\\Library\\lib\\ecpint.lib exit 1                # [win]   # ms import lib
    - if not exist %PREFIX%\\Library\\bin\\ecpint.dll exit 1                # [win]   # gnu/ms dyn lib
    # Verify accessories
    - test -f $PREFIX/lib/libFaddeeva$SHLIB_EXT                             # [unix]
    - test ! -f $PREFIX/lib/libFaddeeva.a                                   # [unix]
    - test -f $PREFIX/include/libecpint.hpp                                 # [unix]
    - test -f $PREFIX/lib/cmake/ecpint/ecpint-config.cmake                  # [unix]
    - test -f $PREFIX/share/libecpint/parseecp.py                           # [unix]
    - if not exist %PREFIX%\\Library\\lib\\Faddeeva.lib exit 1              # [win]
    - if not exist %PREFIX%\\Library\\bin\\Faddeeva.dll exit 1              # [win]
    - if not exist %PREFIX%\\Library\\include\\libecpint.hpp exit 1         # [win]
    - if not exist %PREFIX%\\Library\\lib\\cmake\\ecpint\\ecpint-config.cmake exit 1  # [win]
    - if not exist %PREFIX%\\Library\\share\\libecpint\\parseecp.py exit 1  # [win]
    # Inspect linkage
    - ldd -v $PREFIX/lib/libecpint$SHLIB_EXT                                # [linux]
    - otool -L $PREFIX/lib/libecpint$SHLIB_EXT                              # [osx]
    - objdump.exe -p %PREFIX%\\Library\\bin\\ecpint.dll | findstr /i "dll"  # [win]

about:
  home: https://github.com/robashaw/libecpint
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'A C++ library for the efficient evaluation of integrals over effective core potentials.'
  description: |
    Libecpint is a C++ library for the efficient evaluation of integrals
    over ab initio effective core potentials, using a mixture of
    generated, recursive code and Gauss-Chebyshev quadrature. It is
    designed to be standalone and generic, and is now in its first stable
    release. If you experience any problems please raise an issue here;
    contributions and suggestions are also welcome.
  doc_url: https://libecpint.readthedocs.io/
  dev_url: https://github.com/robashaw/libecpint

extra:
  recipe-maintainers:
    - jan-janssen
